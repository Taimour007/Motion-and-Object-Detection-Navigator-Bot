#include <AFMotor.h>

#define trigPin 9
#define echoPin 10
#define motorPin1 3
#define motorPin2 4
#define motorPin3 5
#define motorPin4 6
#define PIRPin 7
#define leftIRPin A0
#define rightIRPin A1

long duration;
int distance;
AF_DCMotor motor1(1);
AF_DCMotor motor2(2);
AF_DCMotor motor3(3);
AF_DCMotor motor4(4);

void setup() {
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(PIRPin, INPUT);
  pinMode(leftIRPin, INPUT);
  pinMode(rightIRPin, INPUT);
  motor1.setSpeed(255);
  motor2.setSpeed(255);
  motor3.setSpeed(255);
  motor4.setSpeed(255);
  Serial.begin(9600);
}

void loop() {
  int motionDetected = digitalRead(PIRPin);
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distance = duration * 0.034 / 2;
  
  int leftSensor = digitalRead(leftIRPin);
  int rightSensor = digitalRead(rightIRPin);

  if (motionDetected == HIGH) {
    if (distance > 10 && distance < 100) {
      moveForward();
    } else if (distance <= 10) {
      stopMotors();
      delay(500);
      moveBackward();
      delay(1000);
    } else {
      stopMotors();
    }
  } else {
    if (leftSensor == LOW && rightSensor == LOW) {
      moveForward();
    } else if (leftSensor == HIGH && rightSensor == LOW) {
      turnRight();
    } else if (leftSensor == LOW && rightSensor == HIGH) {
      turnLeft();
    } else if (leftSensor == HIGH && rightSensor == HIGH) {
      stopMotors();
    }
  }
}

void moveForward() {
  motor1.run(FORWARD);
  motor2.run(FORWARD);
  motor3.run(FORWARD);
  motor4.run(FORWARD);
}

void moveBackward() {
  motor1.run(BACKWARD);
  motor2.run(BACKWARD);
  motor3.run(BACKWARD);
  motor4.run(BACKWARD);
}

void stopMotors() {
  motor1.run(RELEASE);
  motor2.run(RELEASE);
  motor3.run(RELEASE);
  motor4.run(RELEASE);
}

void turnLeft() {
  motor1.run(BACKWARD);
  motor2.run(BACKWARD);
  motor3.run(FORWARD);
  motor4.run(FORWARD);
}

void turnRight() {
  motor1.run(FORWARD);
  motor2.run(FORWARD);
  motor3.run(BACKWARD);
  motor4.run(BACKWARD);
}
